@using WarehouseMgmtApp.Client.Services
@using WarehouseMgmtApp.Client.Services.Dtos
@using WarehouseMgmtApp.Client.Models
@inject NavigationManager NavigationManager
@inject CategoryService Service
@inject HttpClient HttpClient

<PageTitle>Edit Categories</PageTitle>

    <EditForm Method="post" Model="category" OnValidSubmit="EnviarDatos" FormName="EditCatForm">

        <div class="form-group">
            <label for="name">Descripcion Categoria:</label>
            <InputText id="descripcion" class="form-control"  @bind-Value="category.Description" />
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Enviar</button>
        </div>
    </EditForm>



@code {
    [Parameter]
    public string Id { get; set; }


    [SupplyParameterFromForm]
    public CategoryDto category { get; set; } = new CategoryDto();




    protected override async Task OnInitializedAsync()
    {
        if (Id != null) //si no es nulo, es una edicion, se busca el texto categoria y se setea en el input
        {
            category = await Service.GetCategoryByIdAsync(Convert.ToInt32(Id));
        }

    }




    public async Task EnviarDatos()
    {
        if (Id == null) // se agregara nuevo registro
        {
            await Service.AddCategoryAsync(category);
            NavigationManager.NavigateTo("/Categories");
        }
        else //editar una categoria
        {
            await Service.UpdateCategory(category, Convert.ToInt32(Id));
            NavigationManager.NavigateTo("/Categories");
        }
    }

}


